*** EVALUATION ***
ANSI-C/cC++ Compiler for HC12 V-5.0.41 Build 10203, Jul 23 2010

    1:  // filename  ***************  SCI0.C ****************************** 
    2:  // Simple I/O routines to 9S12DP512 serial port   
    3:  // Jonathan W. Valvano 8/28/10
    4:  
    5:  //  This example accompanies the books
    6:  //   "Embedded Microcomputer Systems: Real Time Interfacing",
    7:  //        Thompson, copyright (c) 2006,
    8:  //   "Introduction to Embedded Systems: Interfacing to the Freescale 9S12",
    9:  //        Cengage Publishing 2009, ISBN-10: 049541137X | ISBN-13: 9780495411376
   10:  
   11:  // Copyright 2010 by Jonathan W. Valvano, valvano@mail.utexas.edu 
   12:  //    You may use, edit, run or distribute this file 
   13:  //    as long as the above copyright notice remains 
   14:  // Modified by EE345L students Charlie Gough && Matt Hawk
   15:  // Modified by EE345M students Agustinus Darmawan + Mingjie Qiu
   16:   
   17:  #include <mc9s12dp512.h>     /* derivative information */
   18:  #include "SCI0.h"
   19:  #define RDRF 0x20   // Receive Data Register Full Bit
   20:  #define TDRE 0x80   // Transmit Data Register Empty Bit
   21:  
   22:  //-------------------------SCI0_Init------------------------
   23:  // Initialize Serial port SCI0
   24:  // Input: baudRate is tha baud rate in bits/sec
   25:  // Output: none
   26:  // assumes a module clock frequency of 24 MHz
   27:  void SCI0_Init(unsigned long baudRate){
*** EVALUATION ***

Function: SCI0_Init
Source  : C:\Users\aaron\Dropbox\EE445L\lab7\ADC_9S12DP512\Sources\SCI0.C
Options : -Cc -CPUHCS12 -D__NO_FLOAT__ -D_HCS12_SERIALMON -Env"GENPATH=C:\Users\aaron\Dropbox\EE445L\lab7\ADC_9S12DP512;C:\Users\aaron\Dropbox\EE445L\lab7\ADC_9S12DP512\bin;C:\Users\aaron\Dropbox\EE445L\lab7\ADC_9S12DP512\prm;C:\Users\aaron\Dropbox\EE445L\lab7\ADC_9S12DP512\cmd;C:\Users\aaron\Dropbox\EE445L\lab7\ADC_9S12DP512\Sources;C:\Program Files (x86)\Freescale\CWS12v5.1\lib\HC12c\lib;C:\Program Files (x86)\Freescale\CWS12v5.1\lib\HC12c\src;C:\Program Files (x86)\Freescale\CWS12v5.1\lib\HC12c\include" -Env"LIBPATH=C:\Program Files (x86)\Freescale\CWS12v5.1\lib\HC12c\include" -EnvOBJPATH=C:\Users\aaron\Dropbox\EE445L\lab7\ADC_9S12DP512\bin -EnvTEXTPATH=C:\Users\aaron\Dropbox\EE445L\lab7\ADC_9S12DP512\bin -Lasm=%n.lst -Ms -ObjN=C:\Users\aaron\Dropbox\EE445L\lab7\ADC_9S12DP512\ADC_9S12DP512_Data\HCS12_Serial_Monitor\ObjectCode\SCI0.C.o -WmsgSd1106

  0000 6caa         [2]     STD   6,-SP
  0002 34           [2]     PSHX  
   28:  unsigned long br;
   29:    SCI0BDH = 0;   
  0003 790000       [3]     CLR   _SCI0BD
   30:    br=(1500000+baudRate/2)/baudRate; // MCLK/(16*baudRate) 
  0006 b7c5         [1]     EXG   D,X
  0008 49           [1]     LSRD  
  0009 b7c5         [1]     EXG   D,X
  000b 46           [1]     RORA  
  000c 56           [1]     RORB  
  000d c3e360       [2]     ADDD  #58208
  0010 b7c5         [1]     EXG   D,X
  0012 c916         [1]     ADCB  #22
  0014 8900         [1]     ADCA  #0
  0016 ed82         [3]     LDY   2,SP
  0018 35           [2]     PSHY  
  0019 ed82         [3]     LDY   2,SP
  001b 35           [2]     PSHY  
  001c b7c5         [1]     EXG   D,X
  001e 160000       [4]     JSR   _LDIVU
  0021 6c86         [2]     STD   6,SP
  0023 6e84         [2]     STX   4,SP
   31:    SCI0BDL= (unsigned char) br; 
  0025 e687         [3]     LDAB  7,SP
  0027 5b00         [2]     STAB  _SCI0BD:1
   32:    SCI0CR1 = 0;
  0029 790000       [3]     CLR   _SCI0CR1
   33:  /* bit value meaning
   34:      7   0    LOOPS, no looping, normal
   35:      6   0    WOMS, normal high/low outputs
   36:      5   0    RSRC, not appliable with LOOPS=0
   37:      4   0    M, 1 start, 8 data, 1 stop
   38:      3   0    WAKE, wake by idle (not applicable)
   39:      2   0    ILT, short idle time (not applicable)
   40:      1   0    PE, no parity
   41:      0   0    PT, parity type (not applicable with PE=0) */ 
   42:    SCI0CR2 = 0x0C; 
  002c c60c         [1]     LDAB  #12
  002e 5b00         [2]     STAB  _SCI0CR2
   43:  /* bit value meaning
   44:      7   0    TIE, no transmit interrupts on TDRE
   45:      6   0    TCIE, no transmit interrupts on TC
   46:      5   0    RIE, no receive interrupts on RDRF
   47:      4   0    ILIE, no interrupts on idle
   48:      3   1    TE, enable transmitter
   49:      2   1    RE, enable receiver
   50:      1   0    RWU, no receiver wakeup
   51:      0   0    SBK, no send break */ 
   52:  }
  0030 1b88         [2]     LEAS  8,SP
  0032 3d           [5]     RTS   
   53:      
   54:  //-------------------------SCI0_InChar------------------------
   55:  // Wait for new serial port input, busy-waiting synchronization
   56:  // The input is not echoed
   57:  // Input: none
   58:  // Output: ASCII code for key typed
   59:  char SCI0_InChar(void){
*** EVALUATION ***

Function: SCI0_InChar
Source  : C:\Users\aaron\Dropbox\EE445L\lab7\ADC_9S12DP512\Sources\SCI0.C
Options : -Cc -CPUHCS12 -D__NO_FLOAT__ -D_HCS12_SERIALMON -Env"GENPATH=C:\Users\aaron\Dropbox\EE445L\lab7\ADC_9S12DP512;C:\Users\aaron\Dropbox\EE445L\lab7\ADC_9S12DP512\bin;C:\Users\aaron\Dropbox\EE445L\lab7\ADC_9S12DP512\prm;C:\Users\aaron\Dropbox\EE445L\lab7\ADC_9S12DP512\cmd;C:\Users\aaron\Dropbox\EE445L\lab7\ADC_9S12DP512\Sources;C:\Program Files (x86)\Freescale\CWS12v5.1\lib\HC12c\lib;C:\Program Files (x86)\Freescale\CWS12v5.1\lib\HC12c\src;C:\Program Files (x86)\Freescale\CWS12v5.1\lib\HC12c\include" -Env"LIBPATH=C:\Program Files (x86)\Freescale\CWS12v5.1\lib\HC12c\include" -EnvOBJPATH=C:\Users\aaron\Dropbox\EE445L\lab7\ADC_9S12DP512\bin -EnvTEXTPATH=C:\Users\aaron\Dropbox\EE445L\lab7\ADC_9S12DP512\bin -Lasm=%n.lst -Ms -ObjN=C:\Users\aaron\Dropbox\EE445L\lab7\ADC_9S12DP512\ADC_9S12DP512_Data\HCS12_Serial_Monitor\ObjectCode\SCI0.C.o -WmsgSd1106

   60:    while((SCI0SR1 & RDRF) == 0){};
  0000 4f0020fc     [4]     BRCLR _SCI0SR1,#32,*+0 ;abs = 0000
   61:    return(SCI0DRL);
  0004 d600         [3]     LDAB  _SCI0DRL
   62:  }
  0006 3d           [5]     RTS   
   63:          
   64:  //-------------------------SCI0_OutChar------------------------
   65:  // Wait for buffer to be empty, output 8-bit to serial port
   66:  // busy-waiting synchronization
   67:  // Input: 8-bit data to be transferred
   68:  // Output: none
   69:  void SCI0_OutChar(char data){
*** EVALUATION ***

Function: SCI0_OutChar
Source  : C:\Users\aaron\Dropbox\EE445L\lab7\ADC_9S12DP512\Sources\SCI0.C
Options : -Cc -CPUHCS12 -D__NO_FLOAT__ -D_HCS12_SERIALMON -Env"GENPATH=C:\Users\aaron\Dropbox\EE445L\lab7\ADC_9S12DP512;C:\Users\aaron\Dropbox\EE445L\lab7\ADC_9S12DP512\bin;C:\Users\aaron\Dropbox\EE445L\lab7\ADC_9S12DP512\prm;C:\Users\aaron\Dropbox\EE445L\lab7\ADC_9S12DP512\cmd;C:\Users\aaron\Dropbox\EE445L\lab7\ADC_9S12DP512\Sources;C:\Program Files (x86)\Freescale\CWS12v5.1\lib\HC12c\lib;C:\Program Files (x86)\Freescale\CWS12v5.1\lib\HC12c\src;C:\Program Files (x86)\Freescale\CWS12v5.1\lib\HC12c\include" -Env"LIBPATH=C:\Program Files (x86)\Freescale\CWS12v5.1\lib\HC12c\include" -EnvOBJPATH=C:\Users\aaron\Dropbox\EE445L\lab7\ADC_9S12DP512\bin -EnvTEXTPATH=C:\Users\aaron\Dropbox\EE445L\lab7\ADC_9S12DP512\bin -Lasm=%n.lst -Ms -ObjN=C:\Users\aaron\Dropbox\EE445L\lab7\ADC_9S12DP512\ADC_9S12DP512_Data\HCS12_Serial_Monitor\ObjectCode\SCI0.C.o -WmsgSd1106

  0000 37           [2]     PSHB  
   70:    while((SCI0SR1 & TDRE) == 0){};
  0001 4f0080fc     [4]     BRCLR _SCI0SR1,#128,*+0 ;abs = 0001
   71:    SCI0DRL = data;
  0005 33           [3]     PULB  
  0006 5b00         [2]     STAB  _SCI0DRL
   72:  }
  0008 3d           [5]     RTS   
   73:  
   74:     
   75:  //-------------------------SCI0_InStatus--------------------------
   76:  // Checks if new input is ready, TRUE if new input is ready
   77:  // Input: none
   78:  // Output: TRUE if a call to InChar will return right away with data
   79:  //         FALSE if a call to InChar will wait for input
   80:  char SCI0_InStatus(void){
*** EVALUATION ***

Function: SCI0_InStatus
Source  : C:\Users\aaron\Dropbox\EE445L\lab7\ADC_9S12DP512\Sources\SCI0.C
Options : -Cc -CPUHCS12 -D__NO_FLOAT__ -D_HCS12_SERIALMON -Env"GENPATH=C:\Users\aaron\Dropbox\EE445L\lab7\ADC_9S12DP512;C:\Users\aaron\Dropbox\EE445L\lab7\ADC_9S12DP512\bin;C:\Users\aaron\Dropbox\EE445L\lab7\ADC_9S12DP512\prm;C:\Users\aaron\Dropbox\EE445L\lab7\ADC_9S12DP512\cmd;C:\Users\aaron\Dropbox\EE445L\lab7\ADC_9S12DP512\Sources;C:\Program Files (x86)\Freescale\CWS12v5.1\lib\HC12c\lib;C:\Program Files (x86)\Freescale\CWS12v5.1\lib\HC12c\src;C:\Program Files (x86)\Freescale\CWS12v5.1\lib\HC12c\include" -Env"LIBPATH=C:\Program Files (x86)\Freescale\CWS12v5.1\lib\HC12c\include" -EnvOBJPATH=C:\Users\aaron\Dropbox\EE445L\lab7\ADC_9S12DP512\bin -EnvTEXTPATH=C:\Users\aaron\Dropbox\EE445L\lab7\ADC_9S12DP512\bin -Lasm=%n.lst -Ms -ObjN=C:\Users\aaron\Dropbox\EE445L\lab7\ADC_9S12DP512\ADC_9S12DP512_Data\HCS12_Serial_Monitor\ObjectCode\SCI0.C.o -WmsgSd1106

   81:    return(SCI0SR1 & RDRF);
  0000 d600         [3]     LDAB  _SCI0SR1
  0002 c420         [1]     ANDB  #32
   82:  }
  0004 3d           [5]     RTS   
   83:  
   84:  //-----------------------SCI0_OutStatus----------------------------
   85:  // Checks if output data buffer is empty, TRUE if empty
   86:  // Input: none
   87:  // Output: TRUE if a call to OutChar will output and return right away
   88:  //         FALSE if a call to OutChar will wait for output to be ready
   89:  char SCI0_OutStatus(void){
*** EVALUATION ***

Function: SCI0_OutStatus
Source  : C:\Users\aaron\Dropbox\EE445L\lab7\ADC_9S12DP512\Sources\SCI0.C
Options : -Cc -CPUHCS12 -D__NO_FLOAT__ -D_HCS12_SERIALMON -Env"GENPATH=C:\Users\aaron\Dropbox\EE445L\lab7\ADC_9S12DP512;C:\Users\aaron\Dropbox\EE445L\lab7\ADC_9S12DP512\bin;C:\Users\aaron\Dropbox\EE445L\lab7\ADC_9S12DP512\prm;C:\Users\aaron\Dropbox\EE445L\lab7\ADC_9S12DP512\cmd;C:\Users\aaron\Dropbox\EE445L\lab7\ADC_9S12DP512\Sources;C:\Program Files (x86)\Freescale\CWS12v5.1\lib\HC12c\lib;C:\Program Files (x86)\Freescale\CWS12v5.1\lib\HC12c\src;C:\Program Files (x86)\Freescale\CWS12v5.1\lib\HC12c\include" -Env"LIBPATH=C:\Program Files (x86)\Freescale\CWS12v5.1\lib\HC12c\include" -EnvOBJPATH=C:\Users\aaron\Dropbox\EE445L\lab7\ADC_9S12DP512\bin -EnvTEXTPATH=C:\Users\aaron\Dropbox\EE445L\lab7\ADC_9S12DP512\bin -Lasm=%n.lst -Ms -ObjN=C:\Users\aaron\Dropbox\EE445L\lab7\ADC_9S12DP512\ADC_9S12DP512_Data\HCS12_Serial_Monitor\ObjectCode\SCI0.C.o -WmsgSd1106

   90:    return(SCI0SR1 & TDRE);
  0000 d600         [3]     LDAB  _SCI0SR1
  0002 c480         [1]     ANDB  #128
   91:  }
  0004 3d           [5]     RTS   
   92:  
   93:  
   94:  //-------------------------SCI0_OutString------------------------
   95:  // Output String (NULL termination), busy-waiting synchronization
   96:  // Input: pointer to a NULL-terminated string to be transferred
   97:  // Output: none
   98:  void SCI0_OutString(char *pt){
*** EVALUATION ***

Function: SCI0_OutString
Source  : C:\Users\aaron\Dropbox\EE445L\lab7\ADC_9S12DP512\Sources\SCI0.C
Options : -Cc -CPUHCS12 -D__NO_FLOAT__ -D_HCS12_SERIALMON -Env"GENPATH=C:\Users\aaron\Dropbox\EE445L\lab7\ADC_9S12DP512;C:\Users\aaron\Dropbox\EE445L\lab7\ADC_9S12DP512\bin;C:\Users\aaron\Dropbox\EE445L\lab7\ADC_9S12DP512\prm;C:\Users\aaron\Dropbox\EE445L\lab7\ADC_9S12DP512\cmd;C:\Users\aaron\Dropbox\EE445L\lab7\ADC_9S12DP512\Sources;C:\Program Files (x86)\Freescale\CWS12v5.1\lib\HC12c\lib;C:\Program Files (x86)\Freescale\CWS12v5.1\lib\HC12c\src;C:\Program Files (x86)\Freescale\CWS12v5.1\lib\HC12c\include" -Env"LIBPATH=C:\Program Files (x86)\Freescale\CWS12v5.1\lib\HC12c\include" -EnvOBJPATH=C:\Users\aaron\Dropbox\EE445L\lab7\ADC_9S12DP512\bin -EnvTEXTPATH=C:\Users\aaron\Dropbox\EE445L\lab7\ADC_9S12DP512\bin -Lasm=%n.lst -Ms -ObjN=C:\Users\aaron\Dropbox\EE445L\lab7\ADC_9S12DP512\ADC_9S12DP512_Data\HCS12_Serial_Monitor\ObjectCode\SCI0.C.o -WmsgSd1106

   99:    while(*pt){
  0000 b745         [1]     TFR   D,X
  0002 2005         [3]     BRA   *+7 ;abs = 0009
  100:      SCI0_OutChar(*pt);
  0004 34           [2]     PSHX  
  0005 0700         [4]     BSR   SCI0_OutChar
  101:      pt++;
  0007 30           [3]     PULX  
  0008 08           [1]     INX   
  0009 e600         [3]     LDAB  0,X
  000b 26f7         [3/1]   BNE   *-7 ;abs = 0004
  102:    }
  103:  }
  000d 3d           [5]     RTS   
  104:  
  105:  //----------------------SCI0_InUDec-------------------------------
  106:  // InUDec accepts ASCII input in unsigned decimal format
  107:  //     and converts to a 16 bit unsigned number
  108:  //     valid range is 0 to 65535
  109:  // Input: none
  110:  // Output: 16-bit unsigned number
  111:  // If you enter a number above 65535, it will truncate without an error
  112:  // Backspace will remove last digit typed
  113:  unsigned short SCI0_InUDec(void){	
*** EVALUATION ***

Function: SCI0_InUDec
Source  : C:\Users\aaron\Dropbox\EE445L\lab7\ADC_9S12DP512\Sources\SCI0.C
Options : -Cc -CPUHCS12 -D__NO_FLOAT__ -D_HCS12_SERIALMON -Env"GENPATH=C:\Users\aaron\Dropbox\EE445L\lab7\ADC_9S12DP512;C:\Users\aaron\Dropbox\EE445L\lab7\ADC_9S12DP512\bin;C:\Users\aaron\Dropbox\EE445L\lab7\ADC_9S12DP512\prm;C:\Users\aaron\Dropbox\EE445L\lab7\ADC_9S12DP512\cmd;C:\Users\aaron\Dropbox\EE445L\lab7\ADC_9S12DP512\Sources;C:\Program Files (x86)\Freescale\CWS12v5.1\lib\HC12c\lib;C:\Program Files (x86)\Freescale\CWS12v5.1\lib\HC12c\src;C:\Program Files (x86)\Freescale\CWS12v5.1\lib\HC12c\include" -Env"LIBPATH=C:\Program Files (x86)\Freescale\CWS12v5.1\lib\HC12c\include" -EnvOBJPATH=C:\Users\aaron\Dropbox\EE445L\lab7\ADC_9S12DP512\bin -EnvTEXTPATH=C:\Users\aaron\Dropbox\EE445L\lab7\ADC_9S12DP512\bin -Lasm=%n.lst -Ms -ObjN=C:\Users\aaron\Dropbox\EE445L\lab7\ADC_9S12DP512\ADC_9S12DP512_Data\HCS12_Serial_Monitor\ObjectCode\SCI0.C.o -WmsgSd1106

  0000 1b9b         [2]     LEAS  -5,SP
  114:  unsigned short number=0, length=0;
  0002 c7           [1]     CLRB  
  0003 87           [1]     CLRA  
  0004 6c83         [2]     STD   3,SP
  0006 6c81         [2]     STD   1,SP
  115:  char character;
  116:    character = SCI0_InChar();	
  117:    while(character != CR){ // accepts until <enter> is typed
  0008 203a         [3]     BRA   *+60 ;abs = 0044
  118:  // The next line checks that the input is a digit, 0-9.
  119:  // If the character is not 0-9, it is ignored and not echoed
  120:      if((character>='0') && (character<='9')) {
  000a c030         [1]     SUBB  #48
  000c c109         [1]     CMPB  #9
  000e 2218         [3/1]   BHI   *+26 ;abs = 0028
  121:        number = 10*number+(character-'0');   // this line overflows if above 65535
  0010 e680         [3]     LDAB  0,SP
  0012 b714         [1]     SEX   B,D
  0014 830030       [2]     SUBD  #48
  0017 b745         [1]     TFR   D,X
  0019 c60a         [1]     LDAB  #10
  001b 87           [1]     CLRA  
  001c ed83         [3]     LDY   3,SP
  001e 13           [3]     EMUL  
  001f 1ae6         [2]     LEAX  D,X
  0021 6e83         [2]     STX   3,SP
  122:        length++;
  0023 ee81         [3]     LDX   1,SP
  0025 08           [1]     INX   
  123:        SCI0_OutChar(character);
  124:      } 
  0026 2016         [3]     BRA   *+24 ;abs = 003e
  125:  // If the input is a backspace, then the return number is
  126:  // changed and a backspace is outputted to the screen
  127:      else if((character==BS) && length){
  0028 e680         [3]     LDAB  0,SP
  002a c108         [1]     CMPB  #8
  002c 2616         [3/1]   BNE   *+24 ;abs = 0044
  002e ee81         [3]     LDX   1,SP
  0030 2712         [3/1]   BEQ   *+20 ;abs = 0044
  128:        number /= 10;
  0032 ec83         [3]     LDD   3,SP
  0034 ce000a       [2]     LDX   #10
  0037 1810         [12]    IDIV  
  0039 6e83         [2]     STX   3,SP
  129:        length--;
  003b ee81         [3]     LDX   1,SP
  003d 09           [1]     DEX   
  003e 6e81         [2]     STX   1,SP
  130:        SCI0_OutChar(character);
  0040 e680         [3]     LDAB  0,SP
  0042 0700         [4]     BSR   SCI0_OutChar
  131:      }
  132:      character = SCI0_InChar();	
  0044 0700         [4]     BSR   SCI0_InChar
  0046 6b80         [2]     STAB  0,SP
  0048 c10d         [1]     CMPB  #13
  004a 26be         [3/1]   BNE   *-64 ;abs = 000a
  133:    }
  134:    return number;
  004c ec83         [3]     LDD   3,SP
  135:  }
  004e 1b85         [2]     LEAS  5,SP
  0050 3d           [5]     RTS   
  136:  
  137:  
  138:  //-----------------------SCI0_OutUDec-----------------------
  139:  // Output a 16-bit number in unsigned decimal format
  140:  // Input: 16-bit number to be transferred
  141:  // Output: none
  142:  // Variable format 1-5 digits with no space before or after
  143:  void SCI0_OutUDec(unsigned short n){
*** EVALUATION ***

Function: SCI0_OutUDec
Source  : C:\Users\aaron\Dropbox\EE445L\lab7\ADC_9S12DP512\Sources\SCI0.C
Options : -Cc -CPUHCS12 -D__NO_FLOAT__ -D_HCS12_SERIALMON -Env"GENPATH=C:\Users\aaron\Dropbox\EE445L\lab7\ADC_9S12DP512;C:\Users\aaron\Dropbox\EE445L\lab7\ADC_9S12DP512\bin;C:\Users\aaron\Dropbox\EE445L\lab7\ADC_9S12DP512\prm;C:\Users\aaron\Dropbox\EE445L\lab7\ADC_9S12DP512\cmd;C:\Users\aaron\Dropbox\EE445L\lab7\ADC_9S12DP512\Sources;C:\Program Files (x86)\Freescale\CWS12v5.1\lib\HC12c\lib;C:\Program Files (x86)\Freescale\CWS12v5.1\lib\HC12c\src;C:\Program Files (x86)\Freescale\CWS12v5.1\lib\HC12c\include" -Env"LIBPATH=C:\Program Files (x86)\Freescale\CWS12v5.1\lib\HC12c\include" -EnvOBJPATH=C:\Users\aaron\Dropbox\EE445L\lab7\ADC_9S12DP512\bin -EnvTEXTPATH=C:\Users\aaron\Dropbox\EE445L\lab7\ADC_9S12DP512\bin -Lasm=%n.lst -Ms -ObjN=C:\Users\aaron\Dropbox\EE445L\lab7\ADC_9S12DP512\ADC_9S12DP512_Data\HCS12_Serial_Monitor\ObjectCode\SCI0.C.o -WmsgSd1106

  0000 3b           [2]     PSHD  
  144:  // This function uses recursion to convert decimal number
  145:  //   of unspecified length as an ASCII string 
  146:    if(n >= 10){
  0001 8c000a       [2]     CPD   #10
  0004 2512         [3/1]   BCS   *+20 ;abs = 0018
  147:      SCI0_OutUDec(n/10);
  0006 ce000a       [2]     LDX   #10
  0009 1810         [12]    IDIV  
  000b b754         [1]     TFR   X,D
  000d 0700         [4]     BSR   SCI0_OutUDec
  148:      n = n%10;
  000f ec80         [3]     LDD   0,SP
  0011 ce000a       [2]     LDX   #10
  0014 1810         [12]    IDIV  
  0016 6c80         [2]     STD   0,SP
  149:    }
  150:    SCI0_OutChar(n+'0'); /* n is between 0 and 9 */
  0018 e681         [3]     LDAB  1,SP
  001a cb30         [1]     ADDB  #48
  001c 160000       [4]     JSR   SCI0_OutChar
  151:  }
  001f 3a           [3]     PULD  
  0020 3d           [5]     RTS   
  152:  
  153:  
  154:  
  155:  //---------------------SCI0_InUHex----------------------------------------
  156:  // Accepts ASCII input in unsigned hexadecimal (base 16) format
  157:  // Input: none
  158:  // Output: 16-bit unsigned number
  159:  // No '$' or '0x' need be entered, just the 1 to 4 hex digits
  160:  // It will convert lower case a-f to uppercase A-F
  161:  //     and converts to a 16 bit unsigned number
  162:  //     value range is 0 to FFFF
  163:  // If you enter a number above FFFF, it will truncate without an error
  164:  // Backspace will remove last digit typed
  165:  unsigned short SCI0_InUHex(void){	
*** EVALUATION ***

Function: SCI0_InUHex
Source  : C:\Users\aaron\Dropbox\EE445L\lab7\ADC_9S12DP512\Sources\SCI0.C
Options : -Cc -CPUHCS12 -D__NO_FLOAT__ -D_HCS12_SERIALMON -Env"GENPATH=C:\Users\aaron\Dropbox\EE445L\lab7\ADC_9S12DP512;C:\Users\aaron\Dropbox\EE445L\lab7\ADC_9S12DP512\bin;C:\Users\aaron\Dropbox\EE445L\lab7\ADC_9S12DP512\prm;C:\Users\aaron\Dropbox\EE445L\lab7\ADC_9S12DP512\cmd;C:\Users\aaron\Dropbox\EE445L\lab7\ADC_9S12DP512\Sources;C:\Program Files (x86)\Freescale\CWS12v5.1\lib\HC12c\lib;C:\Program Files (x86)\Freescale\CWS12v5.1\lib\HC12c\src;C:\Program Files (x86)\Freescale\CWS12v5.1\lib\HC12c\include" -Env"LIBPATH=C:\Program Files (x86)\Freescale\CWS12v5.1\lib\HC12c\include" -EnvOBJPATH=C:\Users\aaron\Dropbox\EE445L\lab7\ADC_9S12DP512\bin -EnvTEXTPATH=C:\Users\aaron\Dropbox\EE445L\lab7\ADC_9S12DP512\bin -Lasm=%n.lst -Ms -ObjN=C:\Users\aaron\Dropbox\EE445L\lab7\ADC_9S12DP512\ADC_9S12DP512_Data\HCS12_Serial_Monitor\ObjectCode\SCI0.C.o -WmsgSd1106

  0000 1b99         [2]     LEAS  -7,SP
  166:  unsigned short number=0, digit, length=0;
  0002 c7           [1]     CLRB  
  0003 87           [1]     CLRA  
  0004 6c83         [2]     STD   3,SP
  0006 6c85         [2]     STD   5,SP
  167:  char character;
  168:    character = SCI0_InChar();
  169:    while(character != CR){	
  0008 2068         [3]     BRA   *+106 ;abs = 0072
  170:      digit = 0x10; // assume bad
  000a c610         [1]     LDAB  #16
  000c 87           [1]     CLRA  
  000d 6c81         [2]     STD   1,SP
  171:      if((character>='0') && (character<='9')){
  000f e680         [3]     LDAB  0,SP
  0011 c030         [1]     SUBB  #48
  0013 c109         [1]     CMPB  #9
  0015 2209         [3/1]   BHI   *+11 ;abs = 0020
  172:        digit = character-'0';
  0017 e680         [3]     LDAB  0,SP
  0019 b715         [1]     SEX   B,X
  001b 1ae1d0       [2]     LEAX  -48,X
  173:      }
  001e 2020         [3]     BRA   *+34 ;abs = 0040
  174:      else if((character>='A') && (character<='F')){ 
  0020 e680         [3]     LDAB  0,SP
  0022 c041         [1]     SUBB  #65
  0024 c105         [1]     CMPB  #5
  0026 2209         [3/1]   BHI   *+11 ;abs = 0031
  175:        digit = (character-'A')+0xA;
  0028 e680         [3]     LDAB  0,SP
  002a b715         [1]     SEX   B,X
  002c 1ae1c9       [2]     LEAX  -55,X
  176:      }
  002f 200f         [3]     BRA   *+17 ;abs = 0040
  177:      else if((character>='a') && (character<='f')){ 
  0031 e680         [3]     LDAB  0,SP
  0033 c061         [1]     SUBB  #97
  0035 c105         [1]     CMPB  #5
  0037 2209         [3/1]   BHI   *+11 ;abs = 0042
  178:        digit = (character-'a')+0xA;
  0039 e680         [3]     LDAB  0,SP
  003b b715         [1]     SEX   B,X
  003d 1ae1a9       [2]     LEAX  -87,X
  0040 6e81         [2]     STX   1,SP
  179:      }
  180:  // If the character is not 0-9 or A-F, it is ignored and not echoed
  181:      if(digit <= 0xF){	
  0042 ec81         [3]     LDD   1,SP
  0044 8c000f       [2]     CPD   #15
  0047 220f         [3/1]   BHI   *+17 ;abs = 0058
  182:        number = number*0x10+digit;
  0049 ec83         [3]     LDD   3,SP
  004b 59           [1]     LSLD  
  004c 59           [1]     LSLD  
  004d 59           [1]     LSLD  
  004e 59           [1]     LSLD  
  004f e381         [3]     ADDD  1,SP
  0051 6c83         [2]     STD   3,SP
  183:        length++;
  0053 ee85         [3]     LDX   5,SP
  0055 08           [1]     INX   
  184:        SCI0_OutChar(character);
  185:      }
  0056 2013         [3]     BRA   *+21 ;abs = 006b
  186:  // Backspace outputted and return value changed if a backspace is inputted
  187:      else if((character==BS) && length){
  0058 e680         [3]     LDAB  0,SP
  005a c108         [1]     CMPB  #8
  005c 2614         [3/1]   BNE   *+22 ;abs = 0072
  005e ee85         [3]     LDX   5,SP
  0060 2710         [3/1]   BEQ   *+18 ;abs = 0072
  188:        number /= 0x10;
  0062 ec83         [3]     LDD   3,SP
  0064 49           [1]     LSRD  
  0065 49           [1]     LSRD  
  0066 49           [1]     LSRD  
  0067 49           [1]     LSRD  
  0068 6c83         [2]     STD   3,SP
  189:        length--;
  006a 09           [1]     DEX   
  006b 6e85         [2]     STX   5,SP
  190:        SCI0_OutChar(character);
  006d e680         [3]     LDAB  0,SP
  006f 160000       [4]     JSR   SCI0_OutChar
  191:      }
  192:      character = SCI0_InChar();
  0072 160000       [4]     JSR   SCI0_InChar
  0075 6b80         [2]     STAB  0,SP
  0077 c10d         [1]     CMPB  #13
  0079 268f         [3/1]   BNE   *-111 ;abs = 000a
  193:    }
  194:    return number;
  007b ec83         [3]     LDD   3,SP
  195:  }
  007d 1b87         [2]     LEAS  7,SP
  007f 3d           [5]     RTS   
  196:  
  197:  //--------------------------SCI0_OutUHex----------------------------
  198:  // Output a 16 bit number in unsigned hexadecimal format
  199:  // Input: 16-bit number to be transferred
  200:  // Output: none
  201:  // Variable format 1 to 4 digits with no space before or after
  202:  void SCI0_OutUHex(unsigned short number){
*** EVALUATION ***

Function: SCI0_OutUHex
Source  : C:\Users\aaron\Dropbox\EE445L\lab7\ADC_9S12DP512\Sources\SCI0.C
Options : -Cc -CPUHCS12 -D__NO_FLOAT__ -D_HCS12_SERIALMON -Env"GENPATH=C:\Users\aaron\Dropbox\EE445L\lab7\ADC_9S12DP512;C:\Users\aaron\Dropbox\EE445L\lab7\ADC_9S12DP512\bin;C:\Users\aaron\Dropbox\EE445L\lab7\ADC_9S12DP512\prm;C:\Users\aaron\Dropbox\EE445L\lab7\ADC_9S12DP512\cmd;C:\Users\aaron\Dropbox\EE445L\lab7\ADC_9S12DP512\Sources;C:\Program Files (x86)\Freescale\CWS12v5.1\lib\HC12c\lib;C:\Program Files (x86)\Freescale\CWS12v5.1\lib\HC12c\src;C:\Program Files (x86)\Freescale\CWS12v5.1\lib\HC12c\include" -Env"LIBPATH=C:\Program Files (x86)\Freescale\CWS12v5.1\lib\HC12c\include" -EnvOBJPATH=C:\Users\aaron\Dropbox\EE445L\lab7\ADC_9S12DP512\bin -EnvTEXTPATH=C:\Users\aaron\Dropbox\EE445L\lab7\ADC_9S12DP512\bin -Lasm=%n.lst -Ms -ObjN=C:\Users\aaron\Dropbox\EE445L\lab7\ADC_9S12DP512\ADC_9S12DP512_Data\HCS12_Serial_Monitor\ObjectCode\SCI0.C.o -WmsgSd1106

  0000 3b           [2]     PSHD  
  203:  // This function uses recursion to convert the number of 
  204:  //   unspecified length as an ASCII string
  205:    if(number >= 0x10){
  0001 8c0010       [2]     CPD   #16
  0004 250f         [3/1]   BCS   *+17 ;abs = 0015
  206:      SCI0_OutUHex(number/0x10);
  0006 49           [1]     LSRD  
  0007 49           [1]     LSRD  
  0008 49           [1]     LSRD  
  0009 49           [1]     LSRD  
  000a 0700         [4]     BSR   SCI0_OutUHex
  207:      SCI0_OutUHex(number%0x10);
  000c ec80         [3]     LDD   0,SP
  000e c40f         [1]     ANDB  #15
  0010 87           [1]     CLRA  
  0011 0700         [4]     BSR   SCI0_OutUHex
  208:    }
  0013 2012         [3]     BRA   *+20 ;abs = 0027
  209:    else{
  210:      if(number < 0xA){
  0015 8c000a       [2]     CPD   #10
  0018 2406         [3/1]   BCC   *+8 ;abs = 0020
  211:        SCI0_OutChar(number+'0');
  001a e681         [3]     LDAB  1,SP
  001c cb30         [1]     ADDB  #48
  212:       }
  001e 2004         [3]     BRA   *+6 ;abs = 0024
  213:      else{
  214:        SCI0_OutChar((number-0x0A)+'A');
  0020 e681         [3]     LDAB  1,SP
  0022 cb37         [1]     ADDB  #55
  0024 160000       [4]     JSR   SCI0_OutChar
  215:      }
  216:    }
  217:  }
  0027 3a           [3]     PULD  
  0028 3d           [5]     RTS   
  218:  
  219:  //------------------------SCI0_InString------------------------
  220:  // Accepts ASCII characters from the serial port
  221:  //    and adds them to a string until <enter> is typed 
  222:  //    or until max length of the string is reached.  
  223:  // It echoes each character as it is inputted.  
  224:  // If a backspace is inputted, the string is modified 
  225:  //    and the backspace is echoed
  226:  // terminates the string with a null character
  227:  // uses busy-waiting synchronization on RDRF
  228:  // Input: pointer to empty buffer, size of buffer
  229:  // Output: Null terminated string
  230:  // -- Modified by Agustinus Darmawan + Mingjie Qiu --
  231:  void SCI0_InString(char *bufPt, unsigned short max) {	
*** EVALUATION ***

Function: SCI0_InString
Source  : C:\Users\aaron\Dropbox\EE445L\lab7\ADC_9S12DP512\Sources\SCI0.C
Options : -Cc -CPUHCS12 -D__NO_FLOAT__ -D_HCS12_SERIALMON -Env"GENPATH=C:\Users\aaron\Dropbox\EE445L\lab7\ADC_9S12DP512;C:\Users\aaron\Dropbox\EE445L\lab7\ADC_9S12DP512\bin;C:\Users\aaron\Dropbox\EE445L\lab7\ADC_9S12DP512\prm;C:\Users\aaron\Dropbox\EE445L\lab7\ADC_9S12DP512\cmd;C:\Users\aaron\Dropbox\EE445L\lab7\ADC_9S12DP512\Sources;C:\Program Files (x86)\Freescale\CWS12v5.1\lib\HC12c\lib;C:\Program Files (x86)\Freescale\CWS12v5.1\lib\HC12c\src;C:\Program Files (x86)\Freescale\CWS12v5.1\lib\HC12c\include" -Env"LIBPATH=C:\Program Files (x86)\Freescale\CWS12v5.1\lib\HC12c\include" -EnvOBJPATH=C:\Users\aaron\Dropbox\EE445L\lab7\ADC_9S12DP512\bin -EnvTEXTPATH=C:\Users\aaron\Dropbox\EE445L\lab7\ADC_9S12DP512\bin -Lasm=%n.lst -Ms -ObjN=C:\Users\aaron\Dropbox\EE445L\lab7\ADC_9S12DP512\ADC_9S12DP512_Data\HCS12_Serial_Monitor\ObjectCode\SCI0.C.o -WmsgSd1106

  0000 6cab         [2]     STD   5,-SP
  232:  int length=0;
  0002 c7           [1]     CLRB  
  0003 87           [1]     CLRA  
  0004 6c82         [2]     STD   2,SP
  233:  char character;
  234:    character = SCI0_InChar();
  235:    while(character != CR){
  0006 202b         [3]     BRA   *+45 ;abs = 0033
  236:      if(character == BS){
  0008 c108         [1]     CMPB  #8
  000a 2613         [3/1]   BNE   *+21 ;abs = 001f
  237:        if(length){
  000c ee82         [3]     LDX   2,SP
  000e 2723         [3/1]   BEQ   *+37 ;abs = 0033
  238:          bufPt--;
  0010 ed87         [3]     LDY   7,SP
  0012 03           [1]     DEY   
  0013 6d87         [2]     STY   7,SP
  239:          length--;
  0015 09           [1]     DEX   
  0016 6e82         [2]     STX   2,SP
  240:          SCI0_OutChar(BS);
  0018 c608         [1]     LDAB  #8
  001a 160000       [4]     JSR   SCI0_OutChar
  241:        }
  242:      }
  001d 2014         [3]     BRA   *+22 ;abs = 0033
  243:      else if(length < max){
  001f ee82         [3]     LDX   2,SP
  0021 ae80         [3]     CPX   0,SP
  0023 240e         [3/1]   BCC   *+16 ;abs = 0033
  244:        *bufPt = character;
  0025 ee87         [3]     LDX   7,SP
  0027 6b30         [2]     STAB  1,X+
  245:        bufPt++;
  0029 6e87         [2]     STX   7,SP
  246:        length++; 
  002b ee82         [3]     LDX   2,SP
  002d 08           [1]     INX   
  002e 6e82         [2]     STX   2,SP
  247:        SCI0_OutChar(character);
  0030 160000       [4]     JSR   SCI0_OutChar
  248:      }
  249:      character = SCI0_InChar();
  0033 160000       [4]     JSR   SCI0_InChar
  0036 6b84         [2]     STAB  4,SP
  0038 c10d         [1]     CMPB  #13
  003a 26cc         [3/1]   BNE   *-50 ;abs = 0008
  250:    }
  251:    *bufPt = 0;
  003c ee87         [3]     LDX   7,SP
  003e 6900         [2]     CLR   0,X
  252:  }
  0040 1b85         [2]     LEAS  5,SP
  0042 3d           [5]     RTS   
  253:  
  254:  
  255:  
  256:  
